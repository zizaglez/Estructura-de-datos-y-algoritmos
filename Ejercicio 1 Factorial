// Ejercicio 1 Factorial
//

#include <iostream>
#include <sstream>
#include<ctype.h>
#include <iomanip>//libreria para manipular el formato de salida
#include "conio.h"

using namespace std;

int factorial();
int fibonacci();
long double factorial(int n);
int factorial_recursivo();
int fibonacci_recursivo();

int main() {
	int opcion;
	do {
		//system("cls");
		cout << "\nMenu Principal\n" << endl;
		cout << "1. Factorial iterativo" << endl;
		cout << "2. Fibonacci iterativo" << endl;
		cout << "3. Factorial recursivo" << endl;
		cout << "4. Fibonacci recursivo" << endl;
		cout << "5. Salir" << endl;
		cout << "Opcion: ";
		cin >> opcion;
		switch (opcion) {
		case 1: factorial();
			break;
		case 2: fibonacci();
			break;
		case 3: factorial_recursivo();
			break;
		case 4: fibonacci_recursivo();
			break;
		case 5: 
			cout << "Cerrando Sistema" << endl;
			break;
		default: cout << "Valor Invalido" << endl;

		}
	} while (opcion != 5);

}

int factorial() {
	long double factorial_N = 1;//Se declaro en long double porque si lo ponemos en int nos manda error
	int numero;
	string s_Numero;
	float decimal;


	do {
		cout << "Ingrese el valor de n: ";
		cin >> s_Numero;
		stringstream intNumero(s_Numero);//Esto es equivalente a aquello que hicimos en el apartado anterior de cin, pero tomando el string intnumero como stream fuente
		intNumero >> numero;

		if (numero < 0) {
			cout << "Error!: el numero debera ser mayor a 0." << endl;
		}
		if (numero > 150) {
			cout << "Error!: el numero debera ser menor de 150" << endl;

		}

	} while (numero < 0 || numero > 150);

		if (isalpha(s_Numero[0])) {//Funci√≥n que revisa si el caracter es de tipo alfabeto
			numero = (int)s_Numero[0];
			cout << "El caracter ingresado es del alfabeto, su codigo en ASCII es: " <<  numero << endl;
			
		}
			/*decimal = numero;
			numero = static_cast <float>(decimal);	
			
			cout << "La conversion de int a float es: " << numero << endl;
		*/

	for (int i = 1; i <= numero; i++) {
		factorial_N *= i;

	}
	cout << "El factorial del numero ingresado es: " << setprecision(0) << setiosflags(ios::fixed) << factorial_N << endl;//setprecision manipula el numero de ceros despues del punto decimal
	//setiosflags(ios::fixed) muestra todos los numeros decimales

			return factorial_N;

} 

long double factorial(int n) {
	long double fact;
	int num;

	if (n == 0) { //caso base
		return 1;
	}
		
	else {
		cout << "Valor de n; " << n << endl;
		fact = n * factorial(n - 1);//caso general
		cout << "Valor del factorial recursivo: " << setprecision(0) << setiosflags(ios::fixed) << fact << endl;

		return fact;
	}

}

int factorial_recursivo() {
	int num;

	do {
		cout << "Ingrese el valor de n: ";
		cin >> num;

		if (num < 0) {
			cout << "Error!: el numero debera ser mayor a cero" << endl;

		}
		if (num > 150) {
			cout << "Error!: el numero debera ser menor de 150" << endl;

		}
	} while (num < 0 || num > 150);
	cout << "Factorial: " << factorial(num) << endl;

	return num;
}

int fibonacci() {
	int numero;
	int fibo1 = 1, fibo2 = 1;
	string f_Numero;
	
	do{
		cout << "Introduce un numero mayor a 1: ";
		cin >> f_Numero;

		stringstream intNumero(f_Numero);
		intNumero >> numero;

		if (isalpha(f_Numero[0])) {
			numero = (int)f_Numero[0];
			cout << "El caracter ingresado es del alfabeto, su codigo en ASCII es: " << numero << endl;

		}
		if (numero < 1) {
			cout << "Error!: el numero debera ser mayor a 1." << endl;
		}
		if (numero > 150) {
			cout << "Error!: el numero debera ser menor de 150" << endl;

		}

	} while (numero < 1 || numero > 150);

		
		cout << "Los " << numero << " primeros numeros de la serie fibonacci son: " << setprecision(0) << setiosflags(ios::fixed) << endl;
		cout << fibo1 << " ";
		for (int i = 2; i <= numero; i++) {
			cout<<fibo2<< " ";
			fibo2 = fibo1 + fibo2;
			fibo1 = fibo2 - fibo1;

		}
		
		return 0;
}

int fibonacci_recursivo() {


	return 0;
}
